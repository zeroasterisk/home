
[alias]
st = status
C = commit -v
c = commit -v
ci = commit -a -v
br = branch
bl = branch -l
bd = branch -d
bD = branch -D
co = checkout
nb = checkout -b
df = diff
cp = cherry-pick
lg = log -p
F = fetch --all
up = pull --rebase
u  = pull --rebase origin
p  = push origin
M  = merge --ff
m  = merge --no-ff
mt = merge --no-commit --squash --stat -v
mo  = merge origin/master --ff
rc = rebase --continue
ra = rebase --abort
sl = stash list
sa = stash apply
sd = stash drop
si = submodule init
su = submodule update --init --recursive
sa = submodule add
ss = submodule sync
repacker = repack -a -d -f --depth=250 --window=250
ql = log --pretty=format:'%Cblue%h %Cred%cD %Creset%cn %Cgreen%s%Creset' --date-order --graph
quicklog = log --pretty=format:'%Cblue%h %Cred%cD %Creset%cn %Cgreen%s%Creset' --date-order --graph
changes = log --oneline --decorate
changelog = show --name-only
svnup = svn rebase
svnpush = svn dcommit
commitnumber = !git log --pretty=oneline | wc -l
worddiff = diff --word-diff
ignore = update-index --assume-unchanged
undo = reset --soft HEAD^
unstage = reset HEAD
first = !sh -c 'git log origin/master --pretty=format:%H  --reverse | head -1'
wtf = !git-wtf
subup = submodule update
sub = submodule add
subinit = submodule init
tags = describe --abbrev=0 --tags

[core]
whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
pager = less -FXRS -x2
symlinks = true
editor = vim

[color]
ui = auto

[color "branch"]
current = yellow reverse
local = yellow
remote = green

[color "diff"]
meta = yellow bold
frag = magenta bold
old = red bold
new = green bold
whitespace = red reverse

[color "status"]
added = yellow
changed = green
untracked = cyan

[branch]
autosetupmerge = true

[push]
default = current

[hub]
http-clone = true

[credential]
helper = osxkeychain
[init]
templatedir = ~/.git_template

# beyond compare (must purchase)
# http://www.scootersoftware.com/support.php?zz=kb_vcs_osx#git
[diff]
  renames = copies
  mnemonicprefix = true
#  tool = bc3
  tool = diffmerge

#[merge]
#	tool = bc3
#[mergetool]
#	bc3 = trustExitCode
#
# diffmerge
# http://adventuresincoding.com/2010/04/how-to-setup-git-to-use-diffmerge/
[difftool "diffmerge"]
	cmd = diffmerge \"$LOCAL\" \"$REMOTE\"
[merge]
	tool = diffmerge
	conflictstyle = diff3
[mergetool "diffmerge"]
	cmd = "diffmerge --merge --result=\"$MERGED\" \"$LOCAL\" \"$(if test -f \"$BASE\"; then echo \"$BASE\"; else echo \"$LOCAL\"; fi)\" \"$REMOTE\""
	trustExitCode = true
[mergetool]
	keepBackup = false

